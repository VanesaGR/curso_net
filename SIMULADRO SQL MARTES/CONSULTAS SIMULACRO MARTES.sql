--CONSULTAS SOBRE UNA TABLA--

--1. DEVUELVE UN LISTADO CON TODOS LOS PEDIDOS QUE SE HAN REALIZADO.
--LOS PEDIDOS DEBEN ESTAR ORDENADOS POR LA FECHA DE REALIZACIÓN, MOSTRANDO EN PRIMER LUGAR LOS PEDIDOS MÁS RECIENTES

SELECT *
FROM pedido
ORDER BY fecha DESC;

--2. DEVUELVE TODOS LOS DATOS DE LOS DOS PEDIDOS DE MAYOR VALOR (LOS DOS MAYORES)

SELECT TOP(2) *
FROM pedido
ORDER BY cantidad DESC;

--3. DEVUELVE UN LISTADO CON LOS IDENTIFICADORES QUE HAN REALIZADO ALGÚN PEDIDO. TENGA EN CUENTA QUE NO DEBE MOSTRAR LOS
--IDENTIFICADORES QUE ESTÉN REPETIDOS

SELECT DISTINCT id_cliente
FROM pedido

--4. DEVUELVE UN LISTADO DE TODOS LOS PEDIDOS QUE SE REALIZARON DURANTE EL AÑO 2017, CUYA CANTIDAD TOTL SEA SUPERIOR A 500 €

SELECT *
FROM pedido
WHERE cantidad >=500 AND YEAR(fecha)=2017

--5. DEVUELVE UN LISTADO CON EL NOMBRE Y LOS APELLIDOS DE LOS COMERCIALES QUE TIENEN UNA COMISIÓN ENTE 0.05 Y 0.11

SELECT nombre, apellido1, apellido2, comision
FROM comercial
WHERE comision BETWEEN 0.05 AND 0.11

--6. DEVUELVE EL VALOR DE LA COMISIÓN DE MAYOR VALOR QUE EXISTE EN LA TABLA COMERCIAL

SELECT TOP 1 comision
FROM comercial

--7. DEVUELVE EL IDENTIFICADOR, NOMBRE Y PRIMER APELLIDO DE AQUELLOS CLIENTES CUYO SEGUNDO APELLIDO NO ES NULL. EL LISTADO DEBERÁ 
--ESTAR ORDENADO ALFABETICAMENTE POR APELLIDOS Y NOMBRE

SELECT id, nombre, apellido1
FROM cliente
WHERE apellido2 is NOT NULL
ORDER BY apellido1, nombre

--8. DEVUELVE UN LISTADO DE LOS NOMBRES DE LOS CLIENTES QUE EMPIEZAN POR A Y TERMINAN POR N Y TAMBIÉN LOS NOMBRES QUE EMPIEZAN
--POR P. EL LISTDO DEBERÁ ESTAR ORDENADO ALFABÉTICAMENTE

SELECT nombre
FROM cliente
WHERE nombre LIKE 'A%N' OR nombre LIKE 'P%'
ORDER BY nombre

--9. DEVUELVE UN LISTADO DE LOS NOMBRES DE LOS CLIENTES QUE NO EMPIEZAN POR A. EL LISTADO DEBERÁ ESTAR ORDENADO ALFABÉTICAMENTE

SELECT nombre
FROM cliente
WHERE nombre NOT LIKE 'A%'
ORDER BY nombre

--10. DEVUELVE UN LISTADO CON LOS NOMBRES DE LOS COMERCIALES QUE TERMINAN POR O. TENGA EN CUENTA QUE SE DEBERÁN ELIMINAR LOS
--NOMBRES REPETIDOS

SELECT DISTINCT nombre
FROM comercial
WHERE nombre lIKE '%O'

--CONSULTAS MULTITABLA--

--1. DEVUELVE UN LISTADO CON EL IDENTIFICADOR, NOMBRE Y LOS APELLIDOS DE TODOS LOS CLIENTES QUE HAYAN REALIZADO ALGUN PEDIDO.
--EL LISTADO DEBE ESTAR ORDENADO ALFABÉTICAMENTE Y SE DEBEN ELIMINAR LOS ELEMENTOS REPETIDOS

SELECT DISTINCT cliente.id, nombre, apellido1, apellido2
FROM cliente INNER JOIN pedido
ON cliente.id = pedido.id_cliente
ORDER BY apellido1

--2. DEVUELVE UN LISTADO QUE MUESTRE TODOS LOS PEDIDOS QUE HA REALIZADO CADA CLIENTE. EL RESULTADO DEBE MOSTRAR TODOS LOS DATOS 
--DE LOS PEDIDOS Y DEL CLIENTE. EL LISTADO DEBE MOSTRAR LOS DATOS DE LOS CLIENTES ORDENADOS ALFABÉTICAMENTE

SELECT DISTINCT *
FROM cliente INNER JOIN pedido
ON cliente.id=pedido.id_cliente
ORDER BY apellido1

--3. DEVUELVE UN LISTADO QUE MUESTRE TODOS LOS PEDIDOS EN LOS QUE HA PARTICIPADO UN COMERCIAL. EL RESULTDO DEBE MOSTAR 
--TODOS LOS DATOS DE LOS PEDIDOS Y DE LOS COMERCIALES. EL LISTADO DEBE MOSTRAR LOS DATOS DE LOS COMERCIALES ORDENADOS
--ALFABÉTICAMENTE

SELECT *
FROM comercial INNER JOIN pedido
ON comercial.id=pedido.id_comercial
ORDER BY nombre DESC

--4. DEVUELVE UN LISTADO QUE MUESTRE TODOS LOS CLIENTES, CON TODOS LOS PEDIDOS QUE HAN REALIZADO Y CON LOS DATOS DE LOS
--COMERCIALES ASOCIADOS A CADA PEDIDO

SELECT *
FROM cliente INNER JOIN pedido 
ON cliente.id=pedido.id_cliente 
INNER JOIN comercial
ON pedido.id_comercial=comercial.id

--5. DEVUELVE UN LISTADO DE TODOS LOS CLIENTES QUE REALIZARON UN PEDIDO DURANTE EL AÑO 2017, CUYA CANTIDAD ESTÉ ENTRE
--300€ Y 1000€

SELECT nombre, apellido1, apellido2, categoria, ciudad, cliente.id, fecha,
pedido.cantidad
FROM cliente INNER JOIN pedido
ON cliente.id=pedido.id_cliente
WHERE YEAR(fecha)=2017 AND (pedido.cantidad BETWEEN 300 AND 1000)
ORDER BY nombre

--6. DEVUELVE EL NOMBRE Y LOS APELLIDOS DE TODOS LOS COMERCIALES QUE HA PARTICIPADO EN ALGÚN PEDIDO REALIZADO POR
--MARÍA SANTANA MORENO
USE SQL_SIMULACRO_MARTES
GO

SELECT DISTINCT comercial.nombre, comercial.apellido1, comercial.apellido2
FROM pedido INNER JOIN comercial 
ON pedido.id_comercial=comercial.id
INNER JOIN cliente
ON cliente.id=pedido.id_cliente
WHERE cliente.nombre LIKE 'María' AND cliente.apellido1 LIKE 'SANTANA' AND cliente.apellido2 LIKE 'MORENO'
ORDER BY comercial.nombre

--7. DEVUELVE EL NOMBRE DE TODOS LOS CLIENTES QUE HAN REALIZADO ALGÚN PEDIDO CON EL COMERCIAL DANIEL SÁEZ VEGA

SELECT DISTINCT cliente.nombre, cliente.apellido1, cliente.apellido2
FROM pedido INNER JOIN comercial 
ON pedido.id_comercial=comercial.id 
INNER JOIN cliente
ON cliente.id=pedido.id_cliente
WHERE comercial.nombre LIKE 'Daniel' AND comercial.apellido1 LIKE 'SÁEZ' AND comercial.apellido2 LIKE 'VEGA'
ORDER BY cliente.nombre

--CONSULTAS RESUMEN--

--1. CALCULA LA CANTIDAD TOTAL QUE SUMAN TODOS LOS PEDIDOS QUE APARECEN EN LA TABLA PEDIDO

SELECT SUM(cantidad) AS total
FROM pedido

--2. CALCULA LA CANTIDAD MEDIA DE TODOS LOS PEDIDOS QUE APARECEN EN LA TABLA PEDIDO

SELECT CAST(AVG(cantidad) AS decimal(10,2)) AS total
FROM pedido

--3. CALCULA EL NÚMERO TOTAL DE COMERCIALES DISTINTOS QUE APARECEN EN LA TABLA PEDIDO

SELECT COUNT(DISTINCT id_comercial) AS comerciales
FROM pedido

--4. CALCULA EL NÚMERO TOTAL DE CLIENTES QUE APARECE EN LA TABLA CLIENTE

SELECT COUNT (id) AS Total_Cliente
FROM cliente

--5. CALCULA CUAL ES LA MAYOR CANTIDAD QUE APARECE EN LA TABLA PEDIDO

SELECT MAX(cantidad)
FROM pedido

--6. CALCULA CUAL ES LA MENOR CANTIDAD QUE APARECE EN LA TABLA PEDIDO

SELECT MIN(cantidad)
FROM pedido

--7. CALCULA CUAL ES EL VALOR MAXIMO DE CATEGORIA PARA CADA UNA DE LAS CIUDADES QUE APARECE EN LA TABLA CLIENTE

SELECT MAX(categoria) AS maximo_categoria, ciudad
FROM cliente
GROUP BY ciudad

--8. CALCULA CUAL ES EL MÁXIMO VALOR DE LOS PEDIDOS REALIZADOS DURANTE EL MISMO DÍA PARA CADA UNO DE LOS CLIENTES.
--ES DECIR, EL MISMO CLIENTE PUEDE HABER REALIZADO VARIOS PEDIDOS DE DIFERENTES CANTIDADES EL MISMO DÍA. 
--SE PIDE QUE SE CALCULE CUAL ES EL PEDIDO DE MÁXIMO VALOR PARA CADA UNO DE LOS DÍAS EN LOS QUE UN CLIENTE HA RELIZADO
--UN PEDIDO. MUESTRA EL IDENTIFICADOR DEL CLIENTE, NOMBRE, APELLIDOS, FECHA Y EL VALOR DE LA CANTIDAD

SELECT  MAX (cantidad) AS Mayor, cliente.id, nombre, apellido1, apellido2, fecha
FROM cliente INNER JOIN pedido
ON cliente.id=pedido.id_cliente
GROUP BY fecha, cliente.id, nombre, apellido1, apellido2
ORDER BY fecha

--9. CALCULA CUAL ES EL MÁXIMO VALOR DE LOS PEDIDOS REALIZADOS DURANTE EL MISMO DÍA PARA CADA UNO DE LOS CLIENTES,
--TENIENDO EN CUENTA QUE SÓLO QUEREMOS MOSTRAR AQUELLOS PEDIDOS QUE SUPEREN LA CANTIDAD DE 2000 €

SELECT MAX (cantidad) AS Mayor, cliente.id, nombre, apellido1, apellido2, fecha
FROM cliente INNER JOIN pedido
ON cliente.id=pedido.id_cliente
GROUP BY fecha, cliente.id, nombre, apellido1, apellido2
HAVING MAX(cantidad)>2000

--10. CALCULE EL MÁXIMO VALOR DE LOS PEDIDOS REALIZADOS PARA CADA UNO DE LOS COMERCIALES DURANTE LA FECHA 2016-08-17
--MUESTRA EL IDENTIFICADOR DEL COMERCIAL, NOMBRE, APELLIDOS Y TOTAL

SELECT MAX(cantidad) AS MAXIMO, comercial.id, nombre, apellido1, apellido2
FROM comercial INNER JOIN pedido
ON comercial.id=pedido.id_comercial
WHERE fecha = '20160817'
GROUP BY comercial.id, nombre, apellido1, apellido2

--11. DEVUELVE UN LISTADO CON EL IDENTIFICADOR DE CLIENTE, NOMBRE Y APELLIDOS Y EL NÚMERO TOTAL DE PEDIDOS QUE HA REALIZADO
--CADA UNO DE CLIENTES. TENGA EN CUENTA QUE PUEDEN EXISTIR CLIENTES QUE NO HAN REALIZADO NINGÚN PEDIDO. ESTOS CLIENTES
--TAMBIÉN DEBEN APARECER EN EL LISTADO INDICANDO QUE EL NÚMERO DE PEDIDOS REALIZADOS ES 0

SELECT cliente.id, nombre, apellido1, apellido2, COUNT(id_cliente) AS NUMERO_PEDIDOS
FROM cliente LEFT JOIN pedido
ON cliente.id=pedido.id_cliente
GROUP BY cliente.id, nombre, apellido1, apellido2

--12. DEVUELVE UN LISTADO CON EL IDENTIFICADOR DE CLIENTE, NOMBRE Y APELLIDOS Y EL NÚMERO TOTAL DE PEDIDOS QUE HA REALIZADO
--CADA UNO DE LO CLIENTES DURANTE EL AÑO 2017

SELECT nombre, apellido1, COUNT(cliente.id) AS NUMERO_PEDIDOS
FROM cliente LEFT JOIN pedido
ON cliente.id=pedido.id_cliente
WHERE YEAR(fecha)=2017
GROUP BY nombre, apellido1;

--13. DEVUELVE UN LISTADO QUE MUESTRE EL IDENTIFICADOR DE CLIENTE, NOMBRE, PRIMER APELLIDO Y EL VALOR DE UNA MÁXIMA CANTIDAD
--DEL PEDIDO REALIZADO POR CADA UNO DE LOS CLIENTES. EL RESULTADO DEBE MOSTRAR AQUELLOS CLIENTES QUE NO HAN REALIZADO NINGÚN PEDIDO
--INDICANDO QUE LA MÁXIMA CANTIDAD DE SUS PEDIDOS REALIZADOS ES 0. PUEDE HACER USO DE LA FUNCION ISNULL

SELECT cliente.id, nombre, apellido1, ISNULL(max(cantidad),0) AS maximo
FROM cliente left JOIN pedido
ON cliente.id=pedido.id_cliente
GROUP BY cliente.id, nombre, apellido1, cantidad
HAVING cantidad IS NULL;

--14.DEVUELVE CUÁL HA SIDO EL PEDIDO DE MÁXIMO VALOR QUE SE HA REALIZADO CADA AÑO

SELECT MAX(cantidad) AS maximo, year(fecha) AS anio
FROM pedido
GROUP BY year(fecha);

--15. DEVUELVE EL NÚMERO TOTAL DE PEDIDOS QUE SE HAN REALIZADO CADA AÑO

SELECT COUNT (id) as id, year(fecha) AS anio
FROM pedido
GROUP BY year(fecha);

--SUBCONSULTAS--

--1. DEVUELVE UN LISTADO CON TODOS LOS PEDIDOS QUE HA REALIZADO ADELA SALAS DÍAZ (SIN UTILIZAR INNER JOIN)

SELECT *
FROM pedido
WHERE id_cliente=(SELECT id
					FROM cliente
					WHERE nombre='Adela' and apellido1='Salas' and apellido2='Díaz');

--2. DEVUELVE EL NÚMERO DE PEDIDOS EN LOS QUE HA PARTICIPADO EL COMERCIAL DANIEL SÁEZ VEGA (SIN UTILIZAR INNER JOIN)

SELECT COUNT(*)
FROM pedido
WHERE id_comercial=(SELECT id
					FROM comercial
					WHERE nombre='Daniel' and apellido1='Sáez' and apellido2='Vega');

--3. DEVUELVE LOS DATOS DEL CLIENTE QUE REALIZÓ EL PEDIDO MÁS CARO EN EL AÑO 2019 (SIN UTILIZAR INNER JOIN)

SELECT *
FROM cliente
WHERE id=(SELECT top 1 id_cliente
			FROM pedido
			WHERE year(fecha)=2019
			ORDER BY cantidad);

--4. DEVUELVE LA FECHA Y LA CANTIDAD DEL PEDIDO DE MENOR VALOR REALIZADO POR EL CLIENTE PEPE RUIZ SANTANA

SELECT TOP 1 fecha, cantidad
FROM pedido INNER JOIN cliente
ON pedido.id_cliente=cliente.id
WHERE cliente.nombre='Pepe' and apellido1='Ruiz' and apellido2='Santana'
GROUP BY cantidad, fecha;

--5. DEVUELVE UN LISTADO CON LOS DATOS DE LOS CLIENTES Y LOS PEDIDOS, DE TODOS LOS CLIENTES QUE HAN REALIZADO UN PEDIDO DURANTE
--EL AÑO 2017 CON UN VALOR MAYOR O IGUAL AL VALOR MEDIO DE LOS PEDIDOS REALIZADOS DURANTE ESE MISMO AÑO

SELECT *
FROM cliente INNER JOIN pedido
ON pedido.id_cliente=cliente.id
WHERE year(fecha)=2017 AND cantidad>=(SELECT AVG(cantidad)
										FROM pedido
										WHERE year(fecha)=2017);


--REPASANDO STORED PROCEDURES--

--4 PROCEDIMIENTOS: ALTAS, BAJAS, MODIFICACIONES Y CONSULTAS (BUSCAR)
--SI HAY IDENTITY, SE IGNORA. PARA CAMBIAR ALGO, ALTER PROCEDURE

--ALTAS
CREATE PROCEDURE SP_ALTACLIENTE
@id int,
@nombre varchar(100),
@apellido1 varchar(100),
@apellido2 varchar(100),
@ciudad varchar(100),
@categoria int
AS
INSERT INTO cliente(id,nombre,apellido1,apellido2,ciudad,categoria)
VALUES(@id,@nombre,@apellido1,@apellido2,@ciudad,@categoria);

GO
--ESTA LÍNEA PARA PROBAR EL PROCEDIMIENTO
EXECUTE SP_ALTACLIENTE 99, 'KIKE','PEREZ','DIAZ','GIJON',300;

--BAJAS
CREATE PROCEDURE SP_BAJACLIENTE
@real_sporting int
AS
DELETE FROM cliente
WHERE id=@real_sporting

GO
--ESTA LÍNEA PARA PROBAR EL PROCEDIMIENTO
EXECUTE SP_BAJACLIENTE 99;

--MODIFICACIONES
CREATE PROCEDURE SP_MODIFICACLIENTE
@id int,
@nombre varchar(100),
@apellido1 varchar(100),
@apellido2 varchar(100),
@ciudad varchar(100),
@categoria int
AS
UPDATE cliente 
SET
id=@id,
nombre=@nombre,
apellido1=@apellido1,
apellido2=@apellido2,
ciudad=@ciudad,
categoria=@categoria
WHERE id=@id;

EXECUTE SP_MODIFICACLIENTE 99, 'we', 'ee', 'yy', 'hh', 200;

--CONSULTA
CREATE PROCEDURE SP_CONSULTACLIENTE
@nombre varchar(100) --@id int
AS
SELECT *
FROM cliente
WHERE nombre LIKE '%nombre%'; --WHERE id=@id;